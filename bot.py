import os
import random
from datetime import datetime
from fastapi import FastAPI
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.types import Message

import requests

# === Настройки ===
API_TOKEN = "7967235756:AAGBflfRWJNZzJ_hD1bArkOB-LxcgNA17dY"
ADMIN_ID = 6613852308

CHECKIDAY_API_URL = "https://checkiday.com/api/v1/dates/"

BASHKORTOSTAN_HOLIDAYS = {
    "01-21": "День родного языка башкир",
    "06-24": "Праздник Сабантуй",
    "05-09": "День Победы (в том числе отмечают в Башкортостане)",
    "04-15": "Ҡыуылт Январ (Ураза-байрам)",
    "05-23": "День Республики Башкортостан"
}

# === Списки извинений и утешений ===

SORRIES = [
    "Прости, это была моя ошибка.",
    "Мне очень жаль, что так получилось.",
    "Прошу прощения за доставленные неудобства.",
    "Не хотел тебя обидеть, прости.",
    "Сожалею, что не оправдал твои ожидания.",
    "Извини, я должен был поступить иначе.",
    "Пожалуйста, прости меня за глупость.",
    "Я понимаю, что натворил, извиняйся.",
    "Мне стыдно, что так вышло. Прости.",
    "Я не хотел(а) этого, честно.",
    "Извини, мне нужно было подумать перед тем, как говорить.",
    "Это моя вина. Прими мои извинения.",
    "Я знаю, что подвел(а) тебя. Извини.",
    "Пожалуйста, дай мне шанс всё исправить.",
    "Мое поведение было недопустимым. Прости.",
    "Я осознаю свою ошибку. Прости меня.",
    "Я чувствую себя ужасно. Прости, пожалуйста.",
    "Мне нечего сказать в свое оправдание. Прости.",
    "Извини, я не хотел(а) причинять тебе боль.",
    "Понимаю, что ты расстроен(а). Я виноват(а).",
    "Я сожалею о каждом своем слове. Прости.",
    "Извини, я просто не подумал(а).",
    "Пожалуйста, не сердись на меня.",
    "Я действительно сожалею.",
    "Прости, я не знал(а), что это тебя заденет.",
    "Мне стыдно, но я надеюсь на прощение.",
    "Я должен(а) был(а) поступить лучше.",
    "Прости, если причинил(а) тебе боль.",
    "Пожалуйста, дай мне возможность загладить вину.",
    "Я понимаю, что поступил(а) плохо. Прости.",
    "Извини, это больше не повторится.",
    "Мои действия были непростительны, но я прошу прощения.",
    "Прости, я не хотел(а) быть грубым(ой).",
    "Я не ожидал(а), что так получится. Прости.",
    "Мне очень жаль, что всё вышло именно так.",
    "Пожалуйста, не держи на меня зла.",
    "Извини, я не хотел(а) тебя игнорировать.",
    "Прости, если я тебя разочаровал(а).",
    "Я сожалею о том, что сказал(а).",
    "Извини, мне нужно было быть внимательнее.",
    "Пожалуйста, простите меня от всего сердца.",
    "Прости, это была моя глупая идея.",
    "Я понимаю, что ты(вы) правы(а). Прости меня.",
    "Извини, я был(а) не прав(а).",
    "Пожалуйста, прости меня хотя бы немного.",
    "Прости, я не хотел(а) создавать проблемы.",
    "Я должен(а) был(а) всё проверить. Прости.",
    "Извини, я сам(а) не понял(а), что делал(а).",
    "Прости, я был(а) слишком резким(ой).",
    "Мне стыдно, но я хочу попросить прощения.",
    "Извини, это произошло по моей вине.",
    "Пожалуйста, не переживай из-за меня.",
    "Прости, я не хотел(а) быть таким(ой).",
    "Я сожалею о каждом моменте этой ситуации.",
    "Извини, я был(а) чересчур уверен(а) в себе.",
    "Прости, я не подумал(а) о последствиях.",
    "Пожалуйста, дай мне ещё один шанс.",
    "Извини, я был(а) слишком эмоционален(а).",
    "Прости, я не учел(а) твои чувства.",
    "Пожалуйста, знай, что я сожалею.",
    "Прости, я не имел(а) права так поступать.",
    "Извини, я не хотел(а) вызывать у тебя раздражение.",
    "Прости, я был(а) невнимательным(ой).",
    "Пожалуйста, прости меня за беспокойство.",
    "Извини, я не знал(а), что это важно для тебя.",
    "Прости, я не ценил(а) тебя как следует.",
    "Пожалуйста, верни ту доверие между нами.",
    "Извини, я был(а) слишком самоуверенным(ой).",
    "Прости, я не смог(ла) вовремя остановиться.",
    "Пожалуйста, не принимай это близко к сердцу.",
    "Извини, я был(а) слишком резким(ой) в своих словах.",
    "Прости, я не хотел(а) быть таким(ой) холодным(ой).",
    "Пожалуйста, прости меня за все эти слова.",
    "Извини, я не подумал(а) о том, как ты себя почувствуешь.",
    "Прости, я не имел(а) права так говорить.",
    "Пожалуйста, забудь то, что я сказал(а).",
    "Извини, я был(а) слишком категоричным(ой).",
    "Прости, я не знал(а), что это тебя расстроит.",
    "Пожалуйста, не сердись на меня долго.",
    "Извини, я был(а) не готов(а) к этому разговору.",
    "Прости, я не хотел(а) показаться равнодушным(ой).",
    "Пожалуйста, знай — я ценю тебя.",
    "Извини, я не знал(а), как иначе поступить.",
    "Прости, я не хотел(а) быть таким(ой) назойливым(ой).",
    "Пожалуйста, не обижайся на меня.",
    "Извини, я был(а) слишком горячим(ой).",
    "Прости, я не хотел(а) тебя ранить.",
    "Пожалуйста, знай, что я сожалею искренне.",
    "Извини, я был(а) слишком уверен(а) в своей правоте.",
    "Прости, я не хотел(а) быть таким(ой) занудным(ой).",
    "Пожалуйста, не переживай из-за меня.",
    "Извини, я не хотел(а) тебя игнорировать.",
    "Прости, я был(а) слишком нетерпеливым(ой).",
    "Пожалуйста, знай, что я ценю тебя.",
    "Извини, я не хотел(а) тебя смущать.",
    "Прости, я был(а) слишком прямым(ой).",
    "Пожалуйста, не думай обо мне плохо.",
    "Извини, я не хотел(а) тебя давить.",
    "Прости, я не подумал(а) о твоих чувствах.",
    "Пожалуйста, прости меня хоть немного.",
    "Извини, я был(а) слишком грубым(ой).",
    "Прости, я не хотел(а) быть таким(ой) высокомерным(ой).",
    "Пожалуйста, знай, что я сожалею всей душой.",
    "Извини, я не хотел(а) быть таким(ой) раздражающим(ой).",
    "Прости, я не знал(а), что это тебя заденет.",
    "Пожалуйста, не принимай это близко к сердцу.",
    "Извини, я был(а) слишком уверен(а) в себе.",
    "Прости, я не хотел(а) быть таким(ой) резким(ой).",
    "Пожалуйста, дай мне шанс всё исправить.",
    "Извини, я не хотел(а) быть таким(ой) бесчувственным(ой).",
]

COMFORTS = [
    "Всё будет хорошо.",
    "Ты справишься, я в тебя верю.",
    "Не переживай, всё наладится.",
    "Это лишь временные трудности.",
    "Ты сделал(а) всё, что мог(ла).",
    # Добавь сколько угодно больше...
]

# === Инициализация ===
bot = Bot(token=API_TOKEN)
dp = Dispatcher()
app = FastAPI()

# === Получение праздников ===
def get_all_holidays(date_str):
    try:
        response = requests.get(f"{CHECKIDAY_API_URL}{date_str}")
        return [item['n'] for item in response.json()['holidays']]
    except Exception as e:
        return []

def get_bashkortostan_holidays(month_day):
    return [BASHKORTOSTAN_HOLIDAYS[day] for day in BASHKORTOSTAN_HOLIDAYS if day == month_day]

def generate_message(all_holidays, local_holidays):
    today = datetime.now().strftime("%d %B %Y")
    message = f"📅 Все праздники мира на {today}:\n\n"

    if all_holidays:
        message += "🌐 Абсолютно все найденные праздники:\n"
        for h in all_holidays:
            message += f"- {h}\n"
        message += "\n"

    if local_holidays:
        message += "🇧🇾 Республиканские праздники Башкортостана:\n"
        for h in local_holidays:
            message += f"- {h}\n"
    else:
        message += "🇧🇾 В Башкортостане сегодня нет особых праздников.\n"

    return message

async def send_holidays(chat_id):
    now = datetime.now()
    date_str = now.strftime("%Y-%m-%d")
    month_day = now.strftime("%m-%d")

    all_holidays = get_all_holidays(date_str)
    local_holidays = get_bashkortostan_holidays(month_day)

    message = generate_message(all_holidays, local_holidays)

    await bot.send_message(chat_id=chat_id, text=message, parse_mode=ParseMode.MARKDOWN)

# === Команды бота ===
@dp.message(lambda message: message.text == "/start")
async def cmd_start(message: Message):
    await send_holidays(message.from_user.id)

@dp.message(lambda message: message.text == "/sorry")
async def cmd_sorry(message: Message):
    reply = random.choice(SORRIES)
    await message.answer(reply)

@dp.message(lambda message: message.text == "/pg" or message.text == "/comfort")
async def cmd_comfort(message: Message):
    reply = random.choice(COMFORTS)
    await message.answer(reply)

# === API маршруты ===
@app.get("/send-holidays")
async def trigger_send():
    await send_holidays(ADMIN_ID)
    return {"status": "ok"}

@app.post("/")
async def webhook(request: dict):
    update = types.Update(**request)
    await dp.feed_webhook_update(bot, update)

@app.on_event("startup")
async def on_startup():
    webhook_url = f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME')}/"
    await bot.set_webhook(webhook_url)

@app.on_event("shutdown")
async def on_shutdown():
    await bot.delete_webhook()

if __name__ == "__main__":
    import uvicorn
    uvicorn.run("bot:app", host="0.0.0.0", port=int(os.getenv("PORT", 10000)))
